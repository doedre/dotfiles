#!/bin/sh

# Steps for proper mods installation:
# 1. OAAB data
# 2. Tamriel data
# 3. graphical mods
# 4. gameplay mods
# 5. Tamriel Rebuilt
# 6. Prepare morrowind installation
# 7. copy fake data to morrowind data
# 8. Make tweaks in morrowind
# ...

morrowind_location=
mods_location=
debug_level=0
initial_ifs="$IFS"

fake_morrowind_dir="mor"
tmp_dir="tmp"
installed_dir="installed"

mod_tamriel_data="Tamriel Data"
mod_OAAB_data="OAAB_Data"

show_help() {
	printf 'Usage: \n'
}

debugf() {
	if [ "$debug_level" -ge 3 ]
	then
		printf "\033[90mdebug: $1\033[0m\n"
	fi
}

infof() {
	if [ "$debug_level" -ge 2 ]
	then
		printf "\033[32minfo: $1\033[0m\n"
	fi
}

errorf() {
	if [ "$debug_level" -ge 1 ]
	then
		printf "\033[31merror: $1\033[0m\n"
	fi
}

fatalf() {
	printf "Error: $1" >&2
	exit 1
}

while :; do
	case $1 in
		-h)
			show_help
			exit 0
			;;
		-v)
			debug_level=1
			;;
		-vv)
			debug_level=2
			;;
		-vvv)
			debug_level=3
			;;
		-o)
			if [ -n "$2" ]
			then
				morrowind_location=$2
				shift
			else
				fatalf 'No location specified after "-o"'
			fi
			;;
		-o?*)
			morrowind_location=${1#-o}
			morrowind_location=${morrowind_location#=}
			if [ -z "$morrowind_location" ]
			then
				fatalf 'No location specified after "-o"'
			fi
			;;
		-i)
			if [ -n "$2" ]
			then
				mods_location=$2
				shift
			else
				fatalf 'No location specified after "-i"'
			fi
			;;
		-i?*)
			mods_location=${1#-i}
			mods_location=${mods_location#=}
			if [ -z "$mods_location" ]
			then
				fatalf 'No location specified after "-i"'
			fi
			;;
		-?*)
			fatalf "Unknown option \"$1\""
			;;
		*)
			break
	esac

	shift
done

if [ ! -d "$morrowind_location" ]
then
	fatalf "No such directory: \"$morrowind_location\""
fi

if [ ! -d "$mods_location" ]
then
	fatalf "No such directory: \"$mods_location\""
fi

morrowind_location=`dirname $morrowind_location`/`basename $morrowind_location`
mods_location=`dirname $mods_location`/`basename $mods_location`
debugf "morrowind_location=$morrowind_location"
debugf "mods_location=$mods_location"

rename_to_lowercase() {
	debugf "Rename \"$1\" to lowercase if not already"
	if [ -e "$1" ]
	then
		new_name=`dirname "$1"`/`basename "$1" | tr "[:upper:]" "[:lower:]"`
		if [ "$new_name" != "$1" ]
		then
			mv -T "$1" "$new_name"
			if [ $? -ne 0 ]
			then
				fatalf "Error renaming \"$1\""
			fi
			debugf "Renamed \"$1\" to \"$new_name\""
		fi
	else
		fatalf "File $1 do not exist"
	fi
}

copy_to_data() {
	debugf "Copy \"$1\" to \"$mods_location/$fake_morrowind_dir\""
	if [ -d "$1" ]
	then
		cp -r "$1/*" "$mods_location/$fake_morrowind_dir/"
		if [ $? -ne 0]
		then
			fatalf "Can't copy from \"$1\""
		fi
	else
		errorf "Folder $1 do not exist"
	fi
}

rename_tmp_to_lowercase() {
	infof "Rename all folders in \"$mods_location/$tmp_dir\" to lowercase"
	for folder in `find -P $mods_location/$tmp_dir -depth -type d`
	do
		rename_to_lowercase "$folder"
	done
}

rename_morrowind_to_lowercase() {
	infof "Rename all folders in \"$morrowind_location\" to lowercase"
	for folder in `find -P $morrowind_location -depth -type d`
	do
		rename_to_lowercase "$folder"
	done
}

extract_archive_to_tmp() {
	infof "Extract \"$1\" archive to \"$mods_location/$tmp_dir\""

	if [ -d "$mods_location/$tmp_dir" ]
	then
		rm -rf "$mods_location/$tmp_dir"
	fi

	if [ -e "$1" ]
	then
		case "${1##*.}" in
			7z)
				7z x -o"$mods_location/$tmp_dir" "$1" >/dev/null
				if [ $? -ne 0 ]
				then
					fatalf "Cannot extract archive"
				fi
				mv "$1" "$mods_location/$installed_dir/"
				if [ $? -ne 0 ]
				then
					fatalf "Cannot move extracted archive"
				fi
				;;
			zip)
				unzip "$1" -d"$mods_location/$tmp_dir" >/dev/null
				if [ $? -ne 0 ]
				then
					fatalf "Cannot extract archive"
				fi
				mv "$1" "$mods_location/$installed_dir/"
				if [ $? -ne 0 ]
				then
					fatalf "Cannot move extracted archive"
				fi
				;;
			rar)
				unrar x -op"$mods_location/$tmp_dir" "$1" >/dev/null
				if [ $? -ne 0 ]
				then
					fatalf "Cannot extract archive"
				fi
				mv "$1" "$mods_location/$installed_dir/"
				if [ $? -ne 0 ]
				then
					fatalf "Cannot move extracted archive"
				fi
				;;
			*)
				fatalf "Unknown archive extension \"$1\""
		esac
	fi
}

preinstall_OAAB() {
	preinstall_mod_data_files "00 core"
}

preinstall_tamriel_data() {
	preinstall_mod_data_files "00 data files"
}

preinstall_tamriel_rebuilt() {
	preinstall_mod_data_files "00 core"
	preinstall_mod_data_files "01 faction integration"
	preinstall_mod_data_files "02 siege at firemoth compatibility patch"
}

preinstall_mod_data_files() {

	data="$mods_location/$tmp_dir"
	if [ ! -z "$1" ]
	then
		infof "Use custom path for data files dir"
		data="$mods_location/$tmp_dir/$1"
	else
		if [ -d "$mods_location/$tmp_dir/data files" ]
		then
			data="$mods_location/$tmp_dir/data files"
		elif [ -d "$mods_location/$tmp_dir/00 core" ]
		then
			data="$mods_location/$tmp_dir/00 core"
		elif [ -d "$mods_location/$tmp_dir/00 data files" ]
		then
			data="$mods_location/$tmp_dir/00 data files"
		else
			infof "Use root directory of the mod as data files directory"
		fi
	fi

	if [ ! -d "$data" ]
	then
		fatalf "\"$data\" directory do not exist"
	fi

	infof "Preinstall data files from \"$data\" directory"

	mkdir -p "$mods_location/$fake_morrowind_dir/data files"
	cp -r "$data"/* "$mods_location/$fake_morrowind_dir/data files"
	if [ $? -ne 0 ]
	then
		fatalf "Cannot copy to $mods_location/$fake_morrowind_dir"
	fi
}

if [ -d "$mods_location/$fake_morrowind_dir" ]
then
	fatalf "Previous installation was not resolved"
fi

mkdir -p "$mods_location/$fake_morrowind_dir"
if [ $? -ne 0 ]
then
	fatalf "Cannot create fake morrowind dir in \"$mods_location/$fake_morrowind_dir\""
fi

if [ -d "$mods_location/$installed_dir" ]
then
	fatalf "Previous installation was not resolved"
else
	mkdir -p "$mods_location/$installed_dir"
	if [ $? -ne 0 ]
	then
		fatalf "Cannot create directory for installed mods in \"$mods_location/$installed_dir\""
	fi
fi

IFS=$'\n'

# Install OAAB and Tamriel data first
for archive in `find -P $mods_location -maxdepth 1 -type f`
do
	if [ "${archive#*"$mod_OAAB_data"}" != "$archive" ]
	then
		extract_archive_to_tmp "$archive"
		rename_tmp_to_lowercase
		preinstall_OAAB
	fi

	if [ "${archive#*"$mod_tamriel_data"}" != "$archive" ]
	then
		extract_archive_to_tmp "$archive"
		rename_tmp_to_lowercase
		preinstall_tamriel_data
	fi
done

# Install all other mods
for archive in `find -P $mods_location -maxdepth 1 -type f`
do
	infof "$archive"

	extract_archive_to_tmp "$archive"
	rename_tmp_to_lowercase
	if [ "${archive#*"Izi"}" != "$archive" ]
	then
		preinstall_mod_data_files "(eng) izi forts - all in one v3.0/data"
	elif [ "${archive#*"Tamriel Rebuilt"}" != "$archive" ]
	then
		preinstall_tamriel_rebuilt
	else
		preinstall_mod_data_files ""
	fi
done

# Prepare morrowind directory
rename_morrowind_to_lowercase
cp -rf "$mods_location/$fake_morrowind_dir"/* "$morrowind_location/"
if [ $? -ne 0 ]
then
	fatalf "Failed to copy fake morrowind root over true one"
fi

sed -i '/Archive 1=Bloodmoon.bsa/a \Archive 2=PC_Data.bsa\
Archive 3=TR_Data.bsa\
Archive 4=Sky_Data.bsa' "$morrowind_location/Morrowind.ini"
if [ $? -ne 0 ]
then
	errorf "Failed to register Tamriel Data bsa"
fi

IFS="$initial_ifs"

mv "$mods_location/$installed_dir"/* "$mods_location/"
if [ $? -ne 0 ]
then
	fatalf "Cannot move mods back to \"$mods_location\""
fi

rm -rf "$mods_location/$installed_dir"
if [ $? -ne 0 ]
then
	fatalf "Cannot remove \"$mods_location/$installed_dir\""
fi

rm -rf "$mods_location/$tmp_dir"
if [ $? -ne 0 ]
then
	fatalf "Cannot remove \"$mods_location/$tmp_dir\""
fi

rm -rf "$mods_location/$fake_morrowind_dir"
if [ $? -ne 0 ]
then
	fatalf "Cannot remove \"$mods_location/$fake_morrowind_dir\""
fi


